{"version":3,"file":"static/js/196.f6eb5486.chunk.js","mappings":"uKAoBA,IAjBuB,WACrB,OACEA,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAAA,gBAAoBC,UAClCH,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CACRC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,OAAO,IACPC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,aAAa,MAIrB,C,8ICjBA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAmI,6B,kBCK7HC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAsEZ,EAnEyB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC1BC,GAAgCC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIR,IAAgBS,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvDK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdjB,EAAgBiB,EAAhBjB,KAAMkB,EAAUD,EAAVC,MACdP,GAAY,SAAAQ,GAAS,OAAAZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBY,GAAS,IAAAC,EAAAA,EAAAA,GAAA,GACXpB,EAAOkB,GAAK,GAEjB,EAcA,OACEG,EAAAA,EAAAA,MAAA,QAAMnC,UAAWC,EAAUiB,SATR,SAAAkB,GACnBA,EAAEC,iBACFnB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACI,iBAAdE,GANJD,GAAWJ,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GASnB,EAGoDX,SAAA,EAChDiC,EAAAA,EAAAA,MAAA,SAAOnC,UAAWC,EAAUC,SAAA,CAAC,SAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXqC,KAAK,OACLxB,KAAK,OACLkB,MAAOR,EAASV,KAChByB,SAAUV,EACVW,UAAQ,QAGZL,EAAAA,EAAAA,MAAA,SAAOnC,UAAWC,EAAUC,SAAA,CAAC,UAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXqC,KAAK,QACLxB,KAAK,QACLkB,MAAOR,EAAST,MAChBwB,SAAUV,EACVW,UAAQ,QAGZL,EAAAA,EAAAA,MAAA,SAAOnC,UAAWC,EAAUC,SAAA,CAAC,aAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXqC,KAAK,WACLxB,KAAK,WACLkB,MAAOR,EAASR,SAChBuB,SAAUV,EACVW,UAAQ,EACRC,UAAW,QAGf1C,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAYqC,KAAK,SAAQpC,SAC3B,kBAAdwB,GAAgC3B,EAAAA,EAAAA,KAAC2C,EAAAA,EAAc,IAAM,eAI9D,E,mBCtCA,EA7BqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXlB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBiB,GAAQlB,EAAAA,EAAAA,IAAYmB,EAAAA,IACpBC,GAAOpB,EAAAA,EAAAA,IAAYqB,EAAAA,IAEP,iBAAdtB,GACFuB,IAAAA,OAAAA,QACE,UAAU,mBAADC,OACUH,EAAKjC,KAAI,sCAC5B,uBAIA+B,GACFI,IAAAA,OAAAA,QAAwB,6BAA8BJ,GAOxD,OACE9C,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACoD,EAAgB,CAACjC,SAND,SAAAkC,GACnBT,GAASU,EAAAA,EAAAA,IAAOD,GAClB,KAOF,C","sources":["components/Loader/RegisterLoader.jsx","webpack://react-homework-template/./src/components/RegisterForm/registerForm.module.css?0fd0","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport css from './loader.module.css';\n\nconst RegisterLoader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <ThreeDots\n        visible={true}\n        height=\"30\"\n        width=\"80\"\n        color=\"#3f51b5\"\n        radius=\"9\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n};\n\nexport default RegisterLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerForm_form__8tKcV\",\"label\":\"registerForm_label__tMcox\",\"input\":\"registerForm_input__uBoqp\",\"button\":\"registerForm_button__RUMnu\"};","import { useState } from 'react';\nimport css from './registerForm.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectAuthLoading } from '../../redux/auth/auth-selectors';\nimport RegisterLoader from 'components/Loader/RegisterLoader';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = ({ onSubmit }) => {\n  const [userData, setUserData] = useState({ ...INITIAL_STATE });\n  const isLoading = useSelector(selectAuthLoading);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setUserData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const reset = () => {\n    setUserData({ ...INITIAL_STATE });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...userData });\n    if (isLoading === 'signupSucces') {\n      reset();\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name:\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={userData.name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Email:\n        <input\n          className={css.input}\n          type=\"email\"\n          name=\"email\"\n          value={userData.email}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Password:\n        <input\n          className={css.input}\n          type=\"password\"\n          name=\"password\"\n          value={userData.password}\n          onChange={handleChange}\n          required\n          minLength={7}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        {isLoading === 'signupPending' ? <RegisterLoader /> : 'Register'}\n      </button>\n    </form>\n  );\n};\n\nexport default RegistrationForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectAuthUser,\n} from '../../redux/auth/auth-selectors';\nimport RegistrationForm from 'components/RegisterForm/RegisterForm';\nimport Notiflix from 'notiflix';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthLoading);\n  const error = useSelector(selectAuthError);\n  const user = useSelector(selectAuthUser);\n\n  if (isLoading === 'signupSucces') {\n    Notiflix.Report.success(\n      'Success',\n      `Congratulations ${user.name}, you have successfully registered`,\n      'Move to My contacts'\n    );\n  }\n\n  if (error) {\n    Notiflix.Report.failure('Oops! Something Went Wrong', error);\n  }\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      <RegistrationForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["_jsx","className","css","children","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperStyle","justifyContent","wrapperClass","INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","userData","setUserData","isLoading","useSelector","selectAuthLoading","handleChange","_ref2","target","value","prevState","_defineProperty","_jsxs","e","preventDefault","type","onChange","required","minLength","RegisterLoader","dispatch","useDispatch","error","selectAuthError","user","selectAuthUser","Notiflix","concat","RegistrationForm","data","signup"],"sourceRoot":""}