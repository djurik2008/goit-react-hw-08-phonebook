{"version":3,"file":"static/js/270.7307bc30.chunk.js","mappings":"8PAKaA,GAAyBC,E,QAAAA,IACpC,CAHwB,SAAAC,GAAK,OAAIA,EAAMC,QAAS,ECHtB,SAAAD,GAAK,OAAIA,EAAME,MAAO,IDOhD,SAACD,EAAUC,GACT,IAAQC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,UAAWC,EAAUJ,EAAVI,MAC1B,IAAKH,EACH,MAAO,CAAEC,MAAOA,EAAOC,UAAAA,EAAWC,MAAAA,GAEpC,IAAMC,EAAmBJ,EAAOK,cAQhC,MAAO,CAAEJ,MAPgBA,EAAMD,QAAO,SAAAM,GAAsB,IAAnBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAE7C,OADuBD,EAAKF,cAEXI,SAASL,IACxBI,EAAMC,SAASL,EAEnB,IACkCF,UAAAA,EAAWC,MAAAA,EAC/C,IEpBF,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAgG,6BAAhG,EAAsI,8B,SCOhIO,EAAgB,CACpBH,KAAM,GACNC,MAAO,IAmET,EA1DsB,WACpB,IAAQN,GAAcS,EAAAA,EAAAA,IAAYf,GAA1BM,UACRU,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIJ,IAAgBK,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,GAAWC,EAAAA,EAAAA,MACXC,GAAWP,EAAAA,EAAAA,GAAA,GAAQG,GAEnBK,EAAe,SAAHhB,GAAoB,IAAdiB,EAAMjB,EAANiB,OACdhB,EAAgBgB,EAAhBhB,KAAMiB,EAAUD,EAAVC,MACdN,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAQ,EAAAA,EAAAA,GAAA,GACPlB,EAAOiB,EAAME,SAElB,EAQMC,EAAQ,WACZT,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIJ,GAChB,EAEA,OACEkB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAXR,SAAAC,GACnBA,EAAEC,iBACFd,GAASe,EAAAA,EAAAA,IAAWb,IACpBM,GACF,EAOoDQ,SAAA,EAChDP,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUK,SAAA,CAAC,QAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLR,UAAWC,EACXQ,QArCR,2HAsCQ/B,KAAK,OACLgC,SAAUjB,EACVE,MAAOP,EAAMV,KACbiC,UAAQ,QAGZZ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUK,SAAA,CAAC,UAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLR,UAAWC,EACXQ,QA9CR,qGA+CQ/B,KAAK,QACLgC,SAAUjB,EACVE,MAAOP,EAAMT,MACbgC,UAAQ,QAGZJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASR,UAAWC,EAAWK,SAC3B,QAAdjC,GAAsBkC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IAAM,kBAI5C,EC1EA,EAAuB,4BAAvB,EAA0D,4BAA1D,EAAkG,iCC8BlG,EAzBsB,WACpB,IAAAC,GAAoC/B,EAAAA,EAAAA,IAAYf,GAAxCK,EAAKyC,EAALzC,MAAOC,EAASwC,EAATxC,UAAWC,EAAKuC,EAALvC,MACpBgB,GAAWC,EAAAA,EAAAA,MAEXuB,EAAW1C,EAAM2C,KAAI,SAAAtC,GAAA,IAAGuC,EAAEvC,EAAFuC,GAAItC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAK,OAC3CoB,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAASK,SAAA,CAC9B5B,EAAK,KAAGC,GACT4B,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLS,QAAS,kBAAM3B,GAAS4B,EAAAA,EAAAA,IAAcF,GAAI,EAC1ChB,UAAWC,EAAcK,SAExBjC,IAAc2C,GAAKT,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IAAM,aAP5BI,EASJ,IAEP,OACEjB,EAAAA,EAAAA,MAAA,OAAAO,SAAA,CACiB,UAAdjC,IAAyBkC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IAChCtC,IAASiC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhC,IACb6C,QAAQ/C,EAAMgD,UAAWb,EAAAA,EAAAA,KAAA,MAAIP,UAAWC,EAASK,SAAEQ,MAG1D,E,UC5BA,EAA8B,qCCoB9B,EAhBwB,WACtB,IAAMxB,GAAWC,EAAAA,EAAAA,MAGjB,OACEgB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEG,SALe,SAAHjC,GAAA,IAAMiB,EAAMjB,EAANiB,OAAM,OAC5BJ,GAAS+B,EAAAA,EAAAA,GAAU3B,EAAOC,MAAMnB,eAAgB,EAK5CE,KAAK,SACL4C,YAAY,eACZtB,UAAWC,KAInB,ECEA,EAdkB,WAChB,IAAMX,GAAWC,EAAAA,EAAAA,MAIjB,OAHAgC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACX,KAEEzB,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACEC,EAAAA,EAAAA,KAACkB,EAAa,KACdlB,EAAAA,EAAAA,KAACmB,EAAe,KAChBnB,EAAAA,EAAAA,KAACoB,EAAa,MAGpB,ECVA,EARuB,WACrB,OACEpB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqB,EAAS,KAGhB,C","sources":["redux/myPhoneBook/contacts/contacts-selectors.js","redux/myPhoneBook/filter/filter.selectors.js","webpack://react-homework-template/./src/components/PhoneBook/PhoneBookForm/PhoneBookForm.module.css?d22c","components/PhoneBook/PhoneBookForm/PhoneBookForm.jsx","webpack://react-homework-template/./src/components/PhoneBook/PhoneBookList/PhoneBookList.module.css?0bc9","components/PhoneBook/PhoneBookList/PhoneBookList.jsx","webpack://react-homework-template/./src/components/PhoneBook/PhoneBookFilter/PhoneBookFilter.module.css?57ee","components/PhoneBook/PhoneBookFilter/PhoneBookFilter.jsx","components/PhoneBook/PhoneBook.jsx","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter.selectors';\n\nconst selectAllContacts = store => store.contacts;\n\nexport const selectFilteredContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filter) => {\n    const { items, isLoading, error } = contacts;\n    if (!filter) {\n      return { items: items, isLoading, error };\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = items.filter(({ name, phone }) => {\n      const normalizedName = name.toLowerCase();\n      return (\n        normalizedName.includes(normalizedFilter) ||\n        phone.includes(normalizedFilter)\n      );\n    });\n    return { items: filteredContacts, isLoading, error };\n  }\n);\n","export const selectFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhoneBookForm_form__ln2Qf\",\"label\":\"PhoneBookForm_label__hl1Ol\",\"input\":\"PhoneBookForm_input__rY+Ws\",\"button\":\"PhoneBookForm_button__26FjX\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../../redux/myPhoneBook/contacts/contacs-operations';\nimport Loader from 'components/Loader/Loader';\nimport { selectFilteredContacts } from '../../../redux/myPhoneBook/contacts/contacts-selectors';\n\nimport css from './PhoneBookForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nconst TEXT_PATTERN =\n  \"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nconst PHONE_PATTERN =\n  '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}';\n\nconst PhoneBookForm = () => {\n  const { isLoading } = useSelector(selectFilteredContacts);\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const dispatch = useDispatch();\n  const contactData = { ...state };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value.trim(),\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact(contactData));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          className={css.input}\n          pattern={TEXT_PATTERN}\n          name=\"name\"\n          onChange={handleChange}\n          value={state.name}\n          required\n        ></input>\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"phone\"\n          className={css.input}\n          pattern={PHONE_PATTERN}\n          name=\"phone\"\n          onChange={handleChange}\n          value={state.phone}\n          required\n        ></input>\n      </label>\n      <button type=\"submit\" className={css.button}>\n        {isLoading === 'add' ? <Loader /> : 'Add contact'}\n      </button>\n    </form>\n  );\n};\n\nexport default PhoneBookForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"PhoneBookList_list__V6lpG\",\"item\":\"PhoneBookList_item__trow3\",\"buttonDel\":\"PhoneBookList_buttonDel__XC7Ry\"};","import css from './PhoneBookList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/myPhoneBook/contacts/contacs-operations';\nimport { selectFilteredContacts } from '../../../redux/myPhoneBook/contacts/contacts-selectors';\nimport Loader from 'components/Loader/Loader';\n\nconst PhoneBookList = () => {\n  const { items, isLoading, error } = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const elements = items.map(({ id, name, phone }) => (\n    <li key={id} className={css.item}>\n      {name}: {phone}\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        className={css.buttonDel}\n      >\n        {isLoading === id ? <Loader /> : 'Delete'}\n      </button>\n    </li>\n  ));\n  return (\n    <div>\n      {isLoading === 'fetch' && <Loader />}\n      {error && <p>{error}</p>}\n      {Boolean(items.length) && <ul className={css.list}>{elements}</ul>}\n    </div>\n  );\n};\n\nexport default PhoneBookList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"PhoneBookFilter_filterInput__mJAwe\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../../redux/myPhoneBook/filter/filterslice';\n\nimport css from './PhoneBookFilter.module.css';\n\nconst PhoneBookFilter = () => {\n  const dispatch = useDispatch();\n  const changeFitler = ({ target }) =>\n    dispatch(setFilter(target.value.toLowerCase()));\n  return (\n    <div>\n      <input\n        onChange={changeFitler}\n        name=\"filter\"\n        placeholder=\"Find contact\"\n        className={css.filterInput}\n      />\n    </div>\n  );\n};\n\nexport default PhoneBookFilter;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/myPhoneBook/contacts/contacs-operations';\nimport PhoneBookForm from './PhoneBookForm/PhoneBookForm';\nimport PhoneBookList from './PhoneBookList/PhoneBookList';\nimport PhoneBookFilter from './PhoneBookFilter/PhoneBookFilter';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  });\n  return (\n    <div>\n      <PhoneBookForm />\n      <PhoneBookFilter />\n      <PhoneBookList />\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'components/PhoneBook/PhoneBook';\nconst MyContactsPage = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n"],"names":["selectFilteredContacts","createSelector","store","contacts","filter","items","isLoading","error","normalizedFilter","toLowerCase","_ref","name","phone","includes","INITIAL_STATE","useSelector","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","contactData","handleChange","target","value","_defineProperty","trim","reset","_jsxs","className","css","onSubmit","e","preventDefault","addContact","children","_jsx","type","pattern","onChange","required","Loader","_useSelector","elements","map","id","onClick","deleteContact","Boolean","length","setFilter","placeholder","useEffect","fetchContacts","PhoneBookForm","PhoneBookFilter","PhoneBookList","PhoneBook"],"sourceRoot":""}